-module(e2fibs).
-export([main/0]).

% Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
% By starting with 1 and 2, the first 10 terms will be:

% 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

% By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
% find the sum of the even-valued terms.

fib(N) when N<1 -> 1;
fib(1) -> 0; % not 1, we sum only even values
fib(2) -> 2;
fib(N) -> fib(N,1,2,1,0).

fib(_Ceil,_Iter,_A,B,Sum) when B>4000000 -> Sum;
fib(Ceil,Iter,_A,_B,Sum) when Iter>Ceil -> Sum;
fib(Ceil,Iter,A,B,Sum) when B rem 2==0 -> 
  % io:fwrite("ceil ~p iter ~p a ~p b ~p sum ~p ~n",[Ceil,Iter,A,B,Sum]),
	fib(Ceil,Iter+1,A+B,A,Sum+B);
fib(Ceil,Iter,A,B,Sum) -> 
	% io:fwrite("ceil ~p iter ~p a ~p b ~p sum ~p ~n",[Ceil,Iter,A,B,Sum]),
	fib(Ceil,Iter+1,A+B,A,Sum).

main() ->
	io:fwrite("~p ~n",[fib(32)]).

% ceil 32 iter 32 a 5702887 b 3524578 sum 1089154 
% 4613732 
